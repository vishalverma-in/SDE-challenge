/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummy = new ListNode(); // this will be the head of my new linked list;
        ListNode* temp = dummy; // this pointer is used to iterate and fill other values;
        int c= 0;               // it will store the carry;
        while(c || l1 || l2)    // iterate untill all the three are false;
        {
            int sum = 0;         //sum will store the total sum of l1->val,l2->val and c; 
            if(l1 != NULL)
            {
                sum += l1->val;
                l1 = l1->next;
            }
            if(l2 != NULL)
            {
                sum += l2->val;
                l2 = l2->next;
            }
            sum += c;
            c = sum/10;  // carry for the next iteration
            ListNode* node = new ListNode(sum%10); // creating new npde with val = sum%10
            temp->next = node; 
            temp = temp->next;
        }
        return dummy->next;
    }
};