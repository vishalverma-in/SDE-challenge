class Solution {
public:
    void sortColors(vector<int>& nums) {
        int n = nums.size();
        int low = 0, mid = 0, high = n-1;
        
        while(mid <= high)
        {
            switch(nums[mid])
            {
                case 0: 
                    swap(nums[mid++], nums[low++]);
                    break;
                case 1:
                    mid++;
                    break;
                case 2:
                    swap(nums[mid], nums[high--]);
                    break;
            }
        }
        
    }
};

/*Approach:
1. Intialize three variables low=0, mid=0, high=n-1;
2. Iterate using while loop till mid < high;
3. Use three cases as 
4. When nums[mid] == 0, swap element at low and mid also do low++, mid++ which will move all the zeros to the beginning;
5. when nums[mid] == 1, simply do mid++ just to make 1s in the middle;
6. when nums[mid] == 2, swap element at mid to the element at high and also do high-- to move all the 2s in the right of the vector;
*/